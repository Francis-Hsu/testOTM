% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/htest.R
\name{tos.dep.test}
\alias{tos.dep.test}
\title{1D (Permutation) Test of Independence}
\usage{
tos.dep.test(
  X,
  Y,
  n.perm = 0,
  scale = c(0, 1),
  rank.data = "uniform",
  epsilon = 1e-06,
  maxit = 100,
  verbose = F
)
}
\arguments{
\item{X}{input data vector.}

\item{Y}{input data vector.}

\item{n.perm}{number of permutations used for computing \eqn{p}-value.}

\item{scale}{a numeric vector indicating the minimum and maximum of the scaled data. Set to \code{NULL} to skip scaling.}

\item{rank.data}{choose the method for assigning ranks to the data points. 
Can be "\code{max}", "\code{min}", "\code{center}", or "\code{uniform}".}

\item{epsilon}{convergence threshold for optimization.}

\item{maxit}{max number of iterations before termination.}

\item{verbose}{logical indicating whether to display optimization messages.}
}
\value{
a list, which contains the values of the independence test statistics,
together with the \eqn{p}-value computed based on that sample.
}
\description{
\code{tos.dep.test} computes the 1D mutual independence test statistic using ranks defined through 
the semi-discrete optimal transport map.
}
\details{
\code{tos.dep.test} tests the null hypothesis that \eqn{X} and \eqn{Y} are independent. 
The \eqn{p}-value is computed through permutations. For a very small sample (size less than \eqn{8}), 
all possible permutations are generated (assuming a suitable \code{n.perm} is provided). 
For larger sample size Monte Carlo permutation sampling is used to approximate the permutations \eqn{p}-value.

Given samples \eqn{(X_1, Y_1), \dots, (X_n, Y_n)}, the following statistic is used for test of independence:
\deqn{T_n=\sum_{i=1}^n\|\hat{R}(X_i, Y_i)-\tilde{R}(X_i, Y_i)\|^2.} 
This statistics will converge to \eqn{0} under the null hypothesis. We thus reject the null if \eqn{T_n} is too large.
}
\seealso{
\code{\link{tos.rank}} for semi-discrete optimal transport rank.
}
\keyword{htest,}
\keyword{multivariate}
